class Person(object):    name = "None"    age = 18    __score = 0  # 考试成绩是秘密，只要自己知道    _petname = "sec"  # 小名，受保护的，子类可以用，但不能共用    def sleep(self):        print("Sleeping... ...")    def work(self):        print("make some money")class Teacher(Person):    teacher_id = "9527"    name = "Bob"    def make_test(self):        print("Make_test... ...")    def work(self):        # 扩充父类的功能只需要调用父类相同的函数        Person.work(self)        # 代表得到父类        super().work()        self.make_test()t = Teacher()print(t.name)print(t._petname)# print(t.__score)t.sleep()t.make_test()t.work()# 构造函数的概念class Animel():    def __init__(self):        print("Animel")class PaxingAni(Animel):    def __init__(self, name):        print("Paxing Dongwu {0}".format(name))    passclass Dog(PaxingAni):    def __init__(self):        # __init__ 就是构造函数        # 每次实例化的时候，第一个被自动的调用        # 因为主要工作是进行初始化，所以得名        print("I am init in dog")class Cat(PaxingAni):    passkaka = Dog()  # 定义的时候就会被执行# 实例化的时候，括号内的参数需要跟构造函数参数匹配c = Cat("c")    # 猫没有构造函数，所以往上找父类的构造函数